name: Build with Python

on:
  push:
    branches: ["main","dev"]
  
  pull_request:
    branches: ["main","dev"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10","3.11"]
        os: [ubuntu-latest, windows-latest] #, macos-latest]
        toolchain:
          - {compiler: gcc, version: 13}
          # - {compiler: gcc, version: 12}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Fortran Setup
        uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
            architecture: 'x64'
            cache: 'pip'
          
      - name: show-versions
        run: |
          gcc --version
          gfortran --version
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install click 'numpy<1.26' cython build wheel setuptools setuptools_scm meson-python pytest ninja

      - name: Install Patchelf
        if: runner.os == 'Linux'
        run: |
          python -m pip install patchelf
          
      - name: Build and package
        run: |
          python -m build --no-isolation
          
      - name: Store Wheel
        uses: actions/upload-artifact@v3
        with:
          name: pyfvs-${{ runner.os }}-py${{ matrix.python-version }}-wheels
          path: dist/*.whl
          if-no-files-found: warn
          
      - name: Store Sdist
        uses: actions/upload-artifact@v3
        with:
          name: pyfvs-sdist
          path: dist/*.tar.gz
          if-no-files-found: warn
  #     - name: Test with pytest
  #       run: |
  #         pytest
